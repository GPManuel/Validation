using Prism.Mvvm;
using System.Collections.Generic;
using System.Linq;

namespace XXXX.XXXX
{
    public class ValidatableObject<T> : BindableBase, IValidatable<T>
    {
        public List<IValidationRule<T>> Validations { get; } = new List<IValidationRule<T>>();

        private List<string> _errors = new List<string>();
        public List<string> Errors
        {
            get => _errors;
            set
            {
                SetProperty(ref _errors, value);
            }
        }
        public bool CleanOnChange { get; set; } = true;

        T _value;

        public ValidatableObject()
        {
        }

        public T Value
        {
            get => _value;
            set
            {
                SetProperty(ref _value, value);

                if (CleanOnChange)
                    IsValid = true;
            }
        }

        private bool isValid = true;
        public bool IsValid
        {
            get => isValid; set
            {
                SetProperty(ref isValid, value);
            }
        }
        public virtual bool Validate()
        {
            Errors.Clear();

            IEnumerable<string> errors = Validations.Where(v => !v.Check(Value))
                .Select(v => v.ValidationMessage);

            Errors = errors.ToList();
            IsValid = !Errors.Any();

            return this.IsValid;
        }
        public override string ToString()
        {
            return $"{Value}";
        }
    }
}
